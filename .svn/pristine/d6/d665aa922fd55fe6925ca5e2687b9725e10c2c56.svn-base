<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
			http://code.alibabatech.com/schema/dubbo
        	http://code.alibabatech.com/schema/dubbo/dubbo.xsd
        	http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
        	http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd
        	http://www.springframework.org/schema/cache
        	http://www.springframework.org/schema/cache/spring-cache.xsd" default-lazy-init="true">

    <!-- 
    <http-conf:conduit name="*.http-conduit" >
    <http-conf:client ConnectionTimeout="10000" ReceiveTimeout="60000"/>
    </http-conf:conduit> -->

	<!-- 把标记了@Controller等注解的类转换为bean -->
    <context:component-scan base-package="com.ybt"/>
    
    
    <!-- 系统初始化 -->
	<bean class="com.ybt.web.init.InitSystemService" lazy-init="false">
		<property name="lists">
			<list>
				<bean class="com.ybt.web.init.SystemInit" />
			</list>
		</property>
	</bean>
    

	<!-- 以静态变量保存Spring ApplicationContext. -->
	 <bean class="com.jiufengxinxi.core.commons.ServicesFactory" lazy-init="false" >
		<property name="beanFactory">
			<bean class="com.jiufengxinxi.core.commons.SpringBeanFactory" />
		</property>
	</bean> 
	
	 <bean id="timeOutJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="com.ybt.base.job.TimeOutJob" />
		<property name="durability" value="true" />
		<property name="requestsRecovery" value="false" />
	</bean>
	 
	 <!-- 发送最终的业务数据到GCT定时处理 -->
	<bean id="timeOutJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="timeOutJobDetail"/>
        </property>
        <property name="cronExpression">
            <value>0/60 * * * * ?</value>
        </property>
    </bean>
	
	<!-- 调度工厂 --> 
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
		<property name="triggers">
			<list>
				<ref bean="timeOutJobCronTrigger" />  
			</list>  
		</property>  
	</bean> 
	
    <!-- 定义受环境影响易变的变量 -->
		<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
			<property name="ignoreResourceNotFound" value="true" />
			<property name="locations">
				<list>
	                <value>classpath*:config.properties</value>
				</list>
			</property>
		</bean>
		
		
	    <!-- 数据源 -->
	     <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		    <property name="driverClassName" value="${jdbc.driver}"/>
		    <property name="url" value="${jdbc.url}"/>
		    <property name="username" value="${jdbc.username}"/>
		    <property name="password" value="${jdbc.password}"/>
		    <property name="initialSize" value="${dbcp.initialSize}"/>
		    <property name="maxActive" value="${dbcp.maxActive}"/>
		    <property name="maxIdle" value="${dbcp.maxIdle}"/>
			<property name="testWhileIdle" value="${dbcp.testWhileIdle}" />
			<property name="validationQuery" value="${dbcp.validationQuery}" /> 
			<property name="validationQueryTimeout" value="${dbcp.validationQueryTimeout}" />
			<property name="removeAbandoned" value="${dbcp.removeAbandoned}" /> 
			<property name="removeAbandonedTimeout" value="${dbcp.removeAbandonedTimeout}" />
			<property name="timeBetweenEvictionRunsMillis" value="${dbcp.timeBetweenEvictionRunsMillis}" /> 
			<property name="numTestsPerEvictionRun" value="${dbcp.numTestsPerEvictionRun}" />
			<property name="minEvictableIdleTimeMillis" value="${dbcp.minEvictableIdleTimeMillis}" /> 
	  	</bean>
	  	
		<!-- Jpa Entity Manager 配置	--> 
		 <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
			<property name="persistenceXmlLocation" value="classpath:persistence.xml"/>
			<property name="dataSource" ref="dataSource"/> 
			<property name="persistenceUnitName" value="defaultPU"/>
			<property name="jpaVendorAdapter">
				<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
			</property>
			<property name="packagesToScan" value="com.ybt.*" />
			<property name="jpaProperties">
				<props>
					<prop key="hibernate.dialect">${hibernate.dialect}</prop>
					<!-- //<prop key="hibernate.default_schema">${jdbc.username}</prop> -->
				    <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
					<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
					<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.fetch_size}</prop>
			        <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				    <prop key="hibernate.cache.region_prefix">ybt.cache.ehcache</prop>
					<prop key="hibernate.cache.use_structured_entries">true</prop>
					<prop key="hibernate.cache.use_second_level_cache">true</prop>
					<prop key="hibernate.cache.use_query_cache">true</prop>
					<prop key="javax.persistence.sharedCache.mode">ENABLE_SELECTIVE</prop>
					<!-- //<prop key="hibernate.generate_statistics">true</prop> -->

					
					<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
					<prop key="hibernate.cache.provider_configuration_file_resource_path">classpath:ehcache-hibernate-local.xml</prop>
				</props>
			</property>
		</bean> 

		<!-- 事务管理器配置,单数据源事务-->
	    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
	        <property name="entityManagerFactory" ref="entityManagerFactory"/>
	   </bean> 
		
		<!-- 使用annotation定义事务 Activates @Transactional for DefaultImageDatabase -->
		 <tx:annotation-driven transaction-manager="transactionManager"  /> 

	
	<bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" lazy-init="false">
        <property name="configLocation" value="classpath:ehcache.xml" />
        <property name="shared" value="true" />
    </bean>
    
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" lazy-init="false">
    	<property name="cacheManager" ref="ehcacheManager" />
    </bean>
    
    <bean id="sessionCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean" lazy-init="false">
        <property name="cacheManager" ref="ehcacheManager"/>
        <property name="cacheName" value="sessionCache"/>
    </bean>
    
    <bean class="com.ybt.web.util.UserUtil" lazy-init="false">
    	<property name="cache" ref="sessionCache"/>
    </bean>
    
    <cache:annotation-driven cache-manager="cacheManager"/>
	
</beans>